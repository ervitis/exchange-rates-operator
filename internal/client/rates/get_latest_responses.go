// Code generated by go-swagger; DO NOT EDIT.

package rates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ervitis/exchange-rates-operator/internal/models"
)

// GetLatestReader is a Reader for the GetLatest structure.
type GetLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 101:
		result := NewGetLatestSwitchingProtocols()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 102:
		result := NewGetLatestProcessing()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 103:
		result := NewGetLatestCheckpoint()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 104:
		result := NewGetLatestStatus104()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 105:
		result := NewGetLatestStatus105()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 106:
		result := NewGetLatestStatus106()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 200:
		result := NewGetLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewGetLatestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetLatestAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 301:
		result := NewGetLatestMovedPermanently()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 302:
		result := NewGetLatestFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLatestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLatestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetLatestNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetLatestBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetLatestServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetLatestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 505:
		result := NewGetLatestHTTPVersionNotSupported()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLatestSwitchingProtocols creates a GetLatestSwitchingProtocols with default headers values
func NewGetLatestSwitchingProtocols() *GetLatestSwitchingProtocols {
	return &GetLatestSwitchingProtocols{}
}

/* GetLatestSwitchingProtocols describes a response with status code 101, with default header values.

No API Key was specified or an invalid API Key was specified.
*/
type GetLatestSwitchingProtocols struct {
}

func (o *GetLatestSwitchingProtocols) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestSwitchingProtocols ", 101)
}

func (o *GetLatestSwitchingProtocols) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestProcessing creates a GetLatestProcessing with default headers values
func NewGetLatestProcessing() *GetLatestProcessing {
	return &GetLatestProcessing{}
}

/* GetLatestProcessing describes a response with status code 102, with default header values.

The account this API request is coming from is inactive.
*/
type GetLatestProcessing struct {
}

func (o *GetLatestProcessing) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestProcessing ", 102)
}

func (o *GetLatestProcessing) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestCheckpoint creates a GetLatestCheckpoint with default headers values
func NewGetLatestCheckpoint() *GetLatestCheckpoint {
	return &GetLatestCheckpoint{}
}

/* GetLatestCheckpoint describes a response with status code 103, with default header values.

The requested API endpoint does not exist.
*/
type GetLatestCheckpoint struct {
}

func (o *GetLatestCheckpoint) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestCheckpoint ", 103)
}

func (o *GetLatestCheckpoint) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestStatus104 creates a GetLatestStatus104 with default headers values
func NewGetLatestStatus104() *GetLatestStatus104 {
	return &GetLatestStatus104{}
}

/* GetLatestStatus104 describes a response with status code 104, with default header values.

The maximum allowed API amount of monthly API requests has been reached.
*/
type GetLatestStatus104 struct {
}

func (o *GetLatestStatus104) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestStatus104 ", 104)
}

func (o *GetLatestStatus104) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestStatus105 creates a GetLatestStatus105 with default headers values
func NewGetLatestStatus105() *GetLatestStatus105 {
	return &GetLatestStatus105{}
}

/* GetLatestStatus105 describes a response with status code 105, with default header values.

The current subscription plan does not support this API endpoint.
*/
type GetLatestStatus105 struct {
}

func (o *GetLatestStatus105) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestStatus105 ", 105)
}

func (o *GetLatestStatus105) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestStatus106 creates a GetLatestStatus106 with default headers values
func NewGetLatestStatus106() *GetLatestStatus106 {
	return &GetLatestStatus106{}
}

/* GetLatestStatus106 describes a response with status code 106, with default header values.

The current request did not return any results.
*/
type GetLatestStatus106 struct {
}

func (o *GetLatestStatus106) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestStatus106 ", 106)
}

func (o *GetLatestStatus106) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestOK creates a GetLatestOK with default headers values
func NewGetLatestOK() *GetLatestOK {
	return &GetLatestOK{}
}

/* GetLatestOK describes a response with status code 200, with default header values.

The foreign exchange reference rates
*/
type GetLatestOK struct {
	Payload *models.Rates
}

func (o *GetLatestOK) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestOK  %+v", 200, o.Payload)
}
func (o *GetLatestOK) GetPayload() *models.Rates {
	return o.Payload
}

func (o *GetLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Rates)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestCreated creates a GetLatestCreated with default headers values
func NewGetLatestCreated() *GetLatestCreated {
	return &GetLatestCreated{}
}

/* GetLatestCreated describes a response with status code 201, with default header values.

An invalid base currency has been entered.
*/
type GetLatestCreated struct {
}

func (o *GetLatestCreated) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestCreated ", 201)
}

func (o *GetLatestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestAccepted creates a GetLatestAccepted with default headers values
func NewGetLatestAccepted() *GetLatestAccepted {
	return &GetLatestAccepted{}
}

/* GetLatestAccepted describes a response with status code 202, with default header values.

One or more invalid symbols have been specified.
*/
type GetLatestAccepted struct {
}

func (o *GetLatestAccepted) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestAccepted ", 202)
}

func (o *GetLatestAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestMovedPermanently creates a GetLatestMovedPermanently with default headers values
func NewGetLatestMovedPermanently() *GetLatestMovedPermanently {
	return &GetLatestMovedPermanently{}
}

/* GetLatestMovedPermanently describes a response with status code 301, with default header values.

No date has been specified. [historical]
*/
type GetLatestMovedPermanently struct {
}

func (o *GetLatestMovedPermanently) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestMovedPermanently ", 301)
}

func (o *GetLatestMovedPermanently) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestFound creates a GetLatestFound with default headers values
func NewGetLatestFound() *GetLatestFound {
	return &GetLatestFound{}
}

/* GetLatestFound describes a response with status code 302, with default header values.

An invalid date has been specified. [historical, convert]
*/
type GetLatestFound struct {
}

func (o *GetLatestFound) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestFound ", 302)
}

func (o *GetLatestFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestForbidden creates a GetLatestForbidden with default headers values
func NewGetLatestForbidden() *GetLatestForbidden {
	return &GetLatestForbidden{}
}

/* GetLatestForbidden describes a response with status code 403, with default header values.

No or an invalid amount has been specified. [convert]
*/
type GetLatestForbidden struct {
}

func (o *GetLatestForbidden) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestForbidden ", 403)
}

func (o *GetLatestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestNotFound creates a GetLatestNotFound with default headers values
func NewGetLatestNotFound() *GetLatestNotFound {
	return &GetLatestNotFound{}
}

/* GetLatestNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type GetLatestNotFound struct {
}

func (o *GetLatestNotFound) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestNotFound ", 404)
}

func (o *GetLatestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestNotImplemented creates a GetLatestNotImplemented with default headers values
func NewGetLatestNotImplemented() *GetLatestNotImplemented {
	return &GetLatestNotImplemented{}
}

/* GetLatestNotImplemented describes a response with status code 501, with default header values.

No or an invalid timeframe has been specified. [timeseries]
*/
type GetLatestNotImplemented struct {
}

func (o *GetLatestNotImplemented) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestNotImplemented ", 501)
}

func (o *GetLatestNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestBadGateway creates a GetLatestBadGateway with default headers values
func NewGetLatestBadGateway() *GetLatestBadGateway {
	return &GetLatestBadGateway{}
}

/* GetLatestBadGateway describes a response with status code 502, with default header values.

No or an invalid "start_date" has been specified. [timeseries, fluctuation]
*/
type GetLatestBadGateway struct {
}

func (o *GetLatestBadGateway) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestBadGateway ", 502)
}

func (o *GetLatestBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestServiceUnavailable creates a GetLatestServiceUnavailable with default headers values
func NewGetLatestServiceUnavailable() *GetLatestServiceUnavailable {
	return &GetLatestServiceUnavailable{}
}

/* GetLatestServiceUnavailable describes a response with status code 503, with default header values.

No or an invalid "end_date" has been specified. [timeseries, fluctuation]
*/
type GetLatestServiceUnavailable struct {
}

func (o *GetLatestServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestServiceUnavailable ", 503)
}

func (o *GetLatestServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestGatewayTimeout creates a GetLatestGatewayTimeout with default headers values
func NewGetLatestGatewayTimeout() *GetLatestGatewayTimeout {
	return &GetLatestGatewayTimeout{}
}

/* GetLatestGatewayTimeout describes a response with status code 504, with default header values.

An invalid timeframe has been specified. [timeseries, fluctuation]
*/
type GetLatestGatewayTimeout struct {
}

func (o *GetLatestGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestGatewayTimeout ", 504)
}

func (o *GetLatestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLatestHTTPVersionNotSupported creates a GetLatestHTTPVersionNotSupported with default headers values
func NewGetLatestHTTPVersionNotSupported() *GetLatestHTTPVersionNotSupported {
	return &GetLatestHTTPVersionNotSupported{}
}

/* GetLatestHTTPVersionNotSupported describes a response with status code 505, with default header values.

The specified timeframe is too long, exceeding 365 days. [timeseries, fluctuation]
*/
type GetLatestHTTPVersionNotSupported struct {
}

func (o *GetLatestHTTPVersionNotSupported) Error() string {
	return fmt.Sprintf("[GET /latest][%d] getLatestHttpVersionNotSupported ", 505)
}

func (o *GetLatestHTTPVersionNotSupported) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
